#ABUILD created by/создан: fat0troll, fat0troll at riseup.net 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=ut2004
pkgver=3369
pkgbuild=1
arch=('auto')

shortdesc="Unreal Tournament 2004"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("Popular first person shooter, native Linux version"
)

source=("http://downloads.unrealadmin.org/UT2004/Patches/Linux/ut2004-lnxpatch3369-2.tar.bz2")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="games games-fps"

#dependencies only needed to build package
build_deps="unshield"

provides=""
conflicts=""

adddep=""
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into /usr/docs/${pkgname} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip
custom_opts=""

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
install -d $pkgdir/usr/share/{applications,pixmaps}
install -d $pkgdir/opt/ut2004
}

build()
{
echo "Welcome to UT2004 AgiliaLinux build package script!"
echo "Note: YOU MUST BUY LICENSE IF YOU INSTALLING GAME BY THIS PACKAGE!"
echo "We can't check license, and this is on your conscience."
echo "You must specify directory with data{1..6}.cab and data1.hdr files."
echo "Enter full path to directory with this files:"
read path_to_dir
cd $path_to_dir
for cabfile in data{1..6}; do
	unshield -d $pkgdir/opt/ut2004 -D2 -x $cabfile || exit 1
done
#Clean up…
rm -rf $pkgdir/opt/ut2004/_*
rm -rf $pkgdir/opt/ut2004/All_UT2004.EXE
mv $pkgdir/opt/ut2004/English_Sounds_Speech_System_Help/Sounds \
	$pkgdir/opt/ut2004
mv $pkgdir/opt/ut2004/English_Sounds_Speech_System_Help/Speech \
	$pkgdir/opt/ut2004
mv $pkgdir/opt/ut2004/English_Sounds_Speech_System_Help/System \
	$pkgdir/opt/ut2004
mv $pkgdir/opt/ut2004/All_Animations \
	$pkgdir/opt/ut2004/Animations
mv $pkgdir/opt/ut2004/All_Benchmark \
	$pkgdir/opt/ut2004/Benchmark
mv $pkgdir/opt/ut2004/All_ForceFeedback \
	$pkgdir/opt/ut2004/ForceFeedback
mv $pkgdir/opt/ut2004/All_Help \
	$pkgdir/opt/ut2004/Help
mv $pkgdir/opt/ut2004/All_KarmaData \
	$pkgdir/opt/ut2004/KarmaData
mv $pkgdir/opt/ut2004/All_Maps \
	$pkgdir/opt/ut2004/Maps
mv $pkgdir/opt/ut2004/All_Music \
	$pkgdir/opt/ut2004/Music
mv $pkgdir/opt/ut2004/All_StaticMeshes \
	$pkgdir/opt/ut2004/StaticMeshes
mv $pkgdir/opt/ut2004/All_Textures \
	$pkgdir/opt/ut2004/Textures
mv $pkgdir/opt/ut2004/All_Web \
	$pkgdir/opt/ut2004/Web
#Linux patches
cp -R $srcdir/UT2004-Patch/* $pkgdir/opt/ut2004
#Using system libraries
ln -s /usr/lib$LIBDIRSUFFIX/libSDL-1.2.so.0 $pkgdir/opt/ut2004/System || exit 1
ln -s /usr/lib$LIBDIRSUFFIX/libopenal.so $pkgdir/opt/ut2004/System || exit 1
#Create blank CD key
echo "xxxxx-xxxxx-xxxxx-xxxxx" > $pkgdir/opt/ut2004/System/CDkey
#Icon file
install -D -m 644 $pkgdir/opt/ut2004/Help/Unreal.ico \
	$pkgdir/usr/share/pixmaps/Unreal.ico
#Desktop file
if [ "$ARCH" = "x86_64" ] ; then
	install -D -m 644 $filedir/ut2004-64.desktop \
		$pkgdir/usr/share/applications/ut2004.desktop
else
	install -D -m 644 $filedir/ut2004-32.desktop \
		$pkgdir/usr/share/applications/ut2004.desktop
fi
}


#ran after function build() 
#после сборки
after_build()
{
echo ""
}
