#ABUILD created by/создан: fat0troll, fat0troll at riseup.net 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=libappindicator
pkgver=0.3.0
pkgbuild=1
arch=('auto')

shortdesc="A library to allow applications to export a menu into the Unity Menu bar"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("A library to allow applications to export a menu into the Unity Menu bar"
)

#source=("http://launchpad.net/libappindicator/0.3/$pkgver/+download/libappindicator-$pkgver.tar.gz")
source=("bzr:lp:$pkgname")
patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="libs x11-libs"

#dependencies only needed to build package
build_deps=""

provides=""
conflicts=""

adddep=""
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into ${pkgdir}/usr/doc/${pkgname}-${pkgver} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip
custom_opts=""

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
go_src_dir
burn_patches
sed -i 's/nunit >= 2\.4\.7/mono-nunit >= 2\.4\.7/' configure{,.ac}
sed -i 's/-lpyglib-2\.0-python2\.6/-lpyglib-2\.0-python/' bindings/python/Makefile{.am,.in}
NOCONFIGURE=1 ./autogen.sh
}

build()
{
./configure --prefix=/usr --libdir=/usr/lib$LIBDIRSUFFIX --libexecdir=/usr/lib$LIBDIRSUFFIX/$pkgname --enable-gtk-doc-html=no --disable-static --enable-introspection
make || exit 1
make DESTDIR=$pkgdir install
}
#ran after function build() 
#после сборки
after_build()
{
echo ""
}
