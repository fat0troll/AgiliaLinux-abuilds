--- unity-3.6.8.orig/src/SimpleLauncherIcon.cpp
+++ unity-3.6.8/src/SimpleLauncherIcon.cpp
@@ -25,7 +25,8 @@
 #include "PluginAdapter.h"
 
 SimpleLauncherIcon::SimpleLauncherIcon (Launcher* IconManager)
-:   LauncherIcon(IconManager)
+:   LauncherIcon(IconManager),
+  _theme_changed_id (0)
 {
   m_Icon = 0;
   m_IconName = 0;
@@ -36,14 +37,17 @@
   LauncherIcon::MouseEnter.connect (sigc::mem_fun (this, &SimpleLauncherIcon::OnMouseEnter));
   LauncherIcon::MouseLeave.connect (sigc::mem_fun (this, &SimpleLauncherIcon::OnMouseLeave));
 
-  g_signal_connect (gtk_icon_theme_get_default (), "changed",
-                    G_CALLBACK (SimpleLauncherIcon::OnIconThemeChanged), this);
+  _theme_changed_id = g_signal_connect (gtk_icon_theme_get_default (), "changed",
+                                        G_CALLBACK (SimpleLauncherIcon::OnIconThemeChanged), this);
 }
 
 SimpleLauncherIcon::~SimpleLauncherIcon()
 {
   if (m_Icon)
     m_Icon->UnReference ();
+
+  if (_theme_changed_id)
+    g_signal_handler_disconnect (gtk_icon_theme_get_default (), _theme_changed_id);
 }
 
 void
--- unity-3.6.8.orig/src/Launcher.cpp
+++ unity-3.6.8/src/Launcher.cpp
@@ -1536,7 +1536,7 @@
   if (!window || !(window->type () & intersect_types) || !window->isMapped () || !window->isViewable ())
     return false;
 
-  if (CompRegion (window->inputRect ()).intersects (CompRect (geo.x, geo.y, geo.width, geo.height)))
+  if (CompRegion (window->borderRect ()).intersects (CompRect (geo.x, geo.y, geo.width, geo.height)))
     return true;
 
   return false;
--- unity-3.6.8.orig/src/SimpleLauncherIcon.h
+++ unity-3.6.8/src/SimpleLauncherIcon.h
@@ -48,6 +48,7 @@
     nux::BaseTexture *m_Icon;
     void ActivateLauncherIcon ();
     static void OnIconThemeChanged (GtkIconTheme* icon_theme, gpointer data);
+    guint32 _theme_changed_id;
 };
 
 #endif // SIMPLELAUNCHERICON_H
--- unity-3.6.8.orig/src/PlaceLauncherIcon.cpp
+++ unity-3.6.8/src/PlaceLauncherIcon.cpp
@@ -32,11 +32,7 @@
 : SimpleLauncherIcon(launcher),
   _entry (entry)
 {
-  gchar *escape;
-
-  escape = g_markup_escape_text (entry->GetName (), -1);
-
-  SetTooltipText (escape);
+  SetTooltipText (entry->GetName ());
   SetShortcut (entry->GetShortcut());
   SetIconName (entry->GetIcon ());
   SetQuirk (QUIRK_VISIBLE, true);
@@ -45,8 +41,6 @@
   SetIconType (TYPE_PLACE); 
 
   entry->active_changed.connect (sigc::mem_fun (this, &PlaceLauncherIcon::OnActiveChanged));
-
-  g_free (escape);
 }
 
 PlaceLauncherIcon::~PlaceLauncherIcon()
--- unity-3.6.8.orig/src/BamfLauncherIcon.cpp
+++ unity-3.6.8/src/BamfLauncherIcon.cpp
@@ -804,15 +804,19 @@
     result.push_back (item);
   }
 
+  gchar *app_name;
+  app_name = g_markup_escape_text (bamf_view_get_name (BAMF_VIEW (m_App)), -1);
+
   item = dbusmenu_menuitem_new ();
   dbusmenu_menuitem_property_set (item,
                                   DBUSMENU_MENUITEM_PROP_LABEL,
-                                  bamf_view_get_name (BAMF_VIEW (m_App)));
+                                  app_name);
   dbusmenu_menuitem_property_set_bool (item,
                                        DBUSMENU_MENUITEM_PROP_ENABLED,
                                        true);
   g_signal_connect (item, "item-activated", (GCallback) OnAppLabelActivated, this);
   result.push_back (item);
+  g_free (app_name);
 
   item = dbusmenu_menuitem_new ();
   dbusmenu_menuitem_property_set (item,
