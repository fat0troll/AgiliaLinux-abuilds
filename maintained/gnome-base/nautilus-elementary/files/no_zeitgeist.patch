diff -Naur nautilus-elementary-build.orig/configure nautilus-elementary-build/configure
--- nautilus-elementary-build.orig/configure	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/configure	2010-10-18 16:19:28.366669710 +0200
@@ -12445,8 +12445,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12459,8 +12458,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12476,8 +12474,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12500,8 +12497,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12514,8 +12510,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12531,8 +12526,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12564,8 +12558,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12579,8 +12572,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -12597,8 +12589,7 @@
 	gio-2.0
 	pango			>= 1.1.2
 	gtk+-2.0		>= 2.22.0
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= 2.4.7
 	gail			>= 0.16
 	unique-1.0
@@ -16100,7 +16091,7 @@
 LIBNAUTILUS_EXTENSION_LIBS="`$PKG_CONFIG --libs $LIBNAUTILUS_EXTENSION_MODULES`"
 
 
-CORE_MODULES="glib-2.0 gnome-desktop-2.0 gthread-2.0 gio-2.0 gio-unix-2.0 unique-1.0 gail gconf-2.0 libxml-2.0 zeitgeist-1.0 vte $EXTRA_CORE_MODULES"
+CORE_MODULES="glib-2.0 gnome-desktop-2.0 gthread-2.0 gio-2.0 gio-unix-2.0 unique-1.0 gail gconf-2.0 libxml-2.0 vte $EXTRA_CORE_MODULES"
 CORE_CFLAGS="`$PKG_CONFIG --cflags $CORE_MODULES` $x_cflags"
 
 CORE_LIBS="`$PKG_CONFIG --libs $CORE_MODULES` $x_libs"
diff -Naur nautilus-elementary-build.orig/configure.in nautilus-elementary-build/configure.in
--- nautilus-elementary-build.orig/configure.in	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/configure.in	2010-10-18 16:22:13.780003044 +0200
@@ -12,7 +12,6 @@
 m4_define(exempi_minver_newapi,        1.99.5)
 m4_define(gail_minver,                 0.16)
 m4_define(appindicator_minver,         0.0.2)
-m4_define(zeitgeist_minver,            1.0)
 m4_define(clutter_minver,              1.0.0)
 m4_define(clutter_gtk_minver,          0.10.0)
 
@@ -71,8 +70,7 @@
 	gio-2.0		
 	pango			>= pango_minver
 	gtk+-2.0		>= gtk_minver
-	zeitgeist-1.0
-        vte
+	vte
 	libxml-2.0		>= xml_minver
 	gail			>= gail_minver
 	unique-1.0
@@ -383,7 +381,7 @@
 AC_SUBST(LIBNAUTILUS_EXTENSION_LIBS)
 
 dnl core nautilus
-CORE_MODULES="glib-2.0 gnome-desktop-2.0 gthread-2.0 gio-2.0 gio-unix-2.0 unique-1.0 gail gconf-2.0 libxml-2.0 zeitgeist-1.0 vte $EXTRA_CORE_MODULES"
+CORE_MODULES="glib-2.0 gnome-desktop-2.0 gthread-2.0 gio-2.0 gio-unix-2.0 unique-1.0 gail gconf-2.0 libxml-2.0 vte $EXTRA_CORE_MODULES"
 CORE_CFLAGS="`$PKG_CONFIG --cflags $CORE_MODULES` $x_cflags"
 AC_SUBST(CORE_CFLAGS)
 CORE_LIBS="`$PKG_CONFIG --libs $CORE_MODULES` $x_libs"
diff -Naur nautilus-elementary-build.orig/libnautilus-private/Makefile.am nautilus-elementary-build/libnautilus-private/Makefile.am
--- nautilus-elementary-build.orig/libnautilus-private/Makefile.am	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/libnautilus-private/Makefile.am	2010-10-18 16:23:38.856669709 +0200
@@ -9,7 +9,6 @@
 	$(CORE_CFLAGS)					\
 	$(WARNING_CFLAGS)				\
 	$(DISABLE_DEPRECATED_CFLAGS)			\
-	$(ZEITGEIST_CFLAGS)				\
 	$(TRACKER_CFLAGS)				\
 	$(BEAGLE_CFLAGS)				\
 	$(APP_INDICATOR_CFLAGS)				\
@@ -32,7 +31,6 @@
 	$(SELINUX_LIBS)			\
 	$(BEAGLE_LIBS)			\
 	$(TRACKER_LIBS)			\
-	$(ZEITGEIST_LIBS)		\
 	$(top_builddir)/eel/libeel-2.la \
 	$(top_builddir)/libnautilus-extension/libnautilus-extension.la \
 	$(CORE_LIBS)			\
@@ -165,8 +163,6 @@
 	nautilus-search-engine-beagle.h \
 	nautilus-search-engine-tracker.c \
 	nautilus-search-engine-tracker.h \
-	nautilus-search-engine-zeitgeist.c \
-	nautilus-search-engine-zeitgeist.h \
 	nautilus-sidebar-provider.c \
 	nautilus-sidebar-provider.h \
 	nautilus-sidebar.c \
@@ -206,7 +202,7 @@
 	nautilus-window-info.h \
 	nautilus-window-slot-info.c \
 	nautilus-window-slot-info.h \
-        nautilus-undostack-manager.c \
+	nautilus-undostack-manager.c \
 	nautilus-undostack-manager.h \
 	$(NULL)
 
@@ -241,7 +237,6 @@
 	$(schema_in_files)              \
 	$(BEAGLE_SOURCES)		\
 	$(TRACKER_SOURCES)		\
-	$(ZEITGEIST_SOURCES)		\
 	$(NULL)
 
 CLEANFILES = \
diff -Naur nautilus-elementary-build.orig/libnautilus-private/nautilus-query.c nautilus-elementary-build/libnautilus-private/nautilus-query.c
--- nautilus-elementary-build.orig/libnautilus-private/nautilus-query.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/libnautilus-private/nautilus-query.c	2010-10-18 16:24:49.096669711 +0200
@@ -34,8 +34,6 @@
 	char            *text;
 	char            *location_uri;
 	GList           *mime_types;
-        gint            period;
-        GtkWidget       *filterbar;
 };
 
 static void  nautilus_query_class_init       (NautilusQueryClass *class);
@@ -99,30 +97,6 @@
 	query->details->text = g_strdup (text);
 }
 
-gint
-nautilus_query_get_period (NautilusQuery *query)
-{
-	return (query->details->period);
-}
-
-void 
-nautilus_query_set_period (NautilusQuery *query, gint days)
-{
-	query->details->period = days;
-}
-
-GtkWidget *
-nautilus_query_get_filterbar (NautilusQuery *query)
-{
-	return (query->details->filterbar);
-}
-
-void 
-nautilus_query_set_filterbar (NautilusQuery *query, GtkWidget *w)
-{
-	query->details->filterbar = w;
-}
-
 char *
 nautilus_query_get_location (NautilusQuery *query)
 {
diff -Naur nautilus-elementary-build.orig/libnautilus-private/nautilus-query.h nautilus-elementary-build/libnautilus-private/nautilus-query.h
--- nautilus-elementary-build.orig/libnautilus-private/nautilus-query.h	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/libnautilus-private/nautilus-query.h	2010-10-18 16:26:35.896669715 +0200
@@ -53,9 +53,6 @@
 char *         nautilus_query_get_text           (NautilusQuery *query);
 void           nautilus_query_set_text           (NautilusQuery *query, const char *text);
 
-gint           nautilus_query_get_period         (NautilusQuery *query);
-void           nautilus_query_set_period         (NautilusQuery *query, gint days);
-
 char *         nautilus_query_get_location       (NautilusQuery *query);
 void           nautilus_query_set_location       (NautilusQuery *query, const char *uri);
 
@@ -63,9 +60,6 @@
 void           nautilus_query_set_mime_types     (NautilusQuery *query, GList *mime_types);
 void           nautilus_query_add_mime_type      (NautilusQuery *query, const char *mime_type);
 
-GtkWidget *    nautilus_query_get_filterbar      (NautilusQuery *query);
-void           nautilus_query_set_filterbar      (NautilusQuery *query, GtkWidget *w);
-
 char *         nautilus_query_to_readable_string (NautilusQuery *query);
 NautilusQuery *nautilus_query_load               (char *file);
 gboolean       nautilus_query_save               (NautilusQuery *query, char *file);
diff -Naur nautilus-elementary-build.orig/libnautilus-private/nautilus-search-directory.c nautilus-elementary-build/libnautilus-private/nautilus-search-directory.c
--- nautilus-elementary-build.orig/libnautilus-private/nautilus-search-directory.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/libnautilus-private/nautilus-search-directory.c	2010-10-18 16:28:49.510003043 +0200
@@ -28,6 +28,7 @@
 #include "nautilus-file.h"
 #include "nautilus-file-private.h"
 #include "nautilus-file-utilities.h"
+#include "nautilus-search-engine.h"
 #include <eel/eel-glib-extensions.h>
 #include <gtk/gtk.h>
 #include <gio/gio.h>
@@ -131,7 +132,6 @@
 static void
 start_or_stop_search_engine (NautilusSearchDirectory *search, gboolean adding)
 {
-        printf ("-------%s\n", G_STRFUNC);
 	if (adding && (search->details->monitor_list ||
 	    search->details->pending_callback_list) &&
 	    search->details->query &&
@@ -589,7 +589,6 @@
 search_force_reload (NautilusDirectory *directory)
 {
 	NautilusSearchDirectory *search;
-        printf ("-------%s\n", G_STRFUNC);
 
 	search = NAUTILUS_SEARCH_DIRECTORY (directory);
 
@@ -606,11 +605,11 @@
 	/* Remove file monitors */
 	reset_file_list (search);
 	
-	/*if (search->details->search_running) {
+	if (search->details->search_running) {
 		nautilus_search_engine_stop (search->details->engine);
 		nautilus_search_engine_set_query (search->details->engine, search->details->query);
 		nautilus_search_engine_start (search->details->engine);
-	}*/
+	}
 }
 
 static gboolean
@@ -737,7 +736,7 @@
 
  	directory_class->are_all_files_seen = search_are_all_files_seen;
 	directory_class->contains_file = search_contains_file;
-	//directory_class->force_reload = search_force_reload;
+	directory_class->force_reload = search_force_reload;
 	directory_class->call_when_ready = search_call_when_ready;
 	directory_class->cancel_callback = search_cancel_callback;
 
@@ -796,16 +795,6 @@
 	}
 					   
 	return NULL;
-}
-
-NautilusSearchEngine *
-nautilus_search_directory_get_engine (NautilusSearchDirectory *search)
-{
-	if (search->details->engine != NULL) {
-		return g_object_ref (search->details->engine);
-	}
-					   
-	return NULL;
 }
 
 NautilusSearchDirectory *
diff -Naur nautilus-elementary-build.orig/libnautilus-private/nautilus-search-directory.h nautilus-elementary-build/libnautilus-private/nautilus-search-directory.h
--- nautilus-elementary-build.orig/libnautilus-private/nautilus-search-directory.h	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/libnautilus-private/nautilus-search-directory.h	2010-10-18 16:43:58.230003043 +0200
@@ -27,7 +27,6 @@
 
 #include <libnautilus-private/nautilus-directory.h>
 #include <libnautilus-private/nautilus-query.h>
-#include "nautilus-search-engine.h"
 
 #define NAUTILUS_TYPE_SEARCH_DIRECTORY nautilus_search_directory_get_type()
 #define NAUTILUS_SEARCH_DIRECTORY(obj) \
@@ -66,7 +65,6 @@
 							  const char              *save_file_uri);
 
 NautilusQuery           *nautilus_search_directory_get_query       (NautilusSearchDirectory *search);
-NautilusSearchEngine    *nautilus_search_directory_get_engine      (NautilusSearchDirectory *search);
 void                    nautilus_search_directory_set_query        (NautilusSearchDirectory *search,
 							            NautilusQuery           *query);
 
diff -Naur nautilus-elementary-build.orig/libnautilus-private/nautilus-search-engine.c nautilus-elementary-build/libnautilus-private/nautilus-search-engine.c
--- nautilus-elementary-build.orig/libnautilus-private/nautilus-search-engine.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/libnautilus-private/nautilus-search-engine.c	2010-10-18 16:46:00.286669710 +0200
@@ -26,7 +26,6 @@
 #include "nautilus-search-engine-beagle.h"
 #include "nautilus-search-engine-simple.h"
 #include "nautilus-search-engine-tracker.h"
-#include "nautilus-search-engine-zeitgeist.h"
 
 #include <eel/eel-gtk-macros.h>
 
@@ -127,13 +126,6 @@
 {
 	NautilusSearchEngine *engine;
 
-        /* every time we re doing a new search it create a new engine */
-        printf("%s\n", G_STRFUNC);
-	engine = nautilus_search_engine_zeitgeist_new ();
-	if (engine) {
-		return engine;
-	}
-
 	engine = nautilus_search_engine_tracker_new ();
 	if (engine) {
 		return engine;
@@ -144,7 +136,6 @@
 		return engine;
 	}
 	
-        engine = nautilus_search_engine_simple_new ();
 	return engine;
 }
 
diff -Naur nautilus-elementary-build.orig/src/Makefile.am nautilus-elementary-build/src/Makefile.am
--- nautilus-elementary-build.orig/src/Makefile.am	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/Makefile.am	2010-10-18 17:00:14.853336376 +0200
@@ -88,8 +88,6 @@
 	nautilus-navigation-action.h		\
 	nautilus-navigation-bar.c         	\
 	nautilus-navigation-bar.h		\
-	nautilus-filter-bar.c         	        \
-	nautilus-filter-bar.h	        	\
 	nautilus-navigation-window-menus.c      \
 	nautilus-navigation-window.c            \
 	nautilus-navigation-window.h            \
diff -Naur nautilus-elementary-build.orig/src/nautilus-information-panel.c nautilus-elementary-build/src/nautilus-information-panel.c
--- nautilus-elementary-build.orig/src/nautilus-information-panel.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-information-panel.c	2010-10-18 17:02:06.946669709 +0200
@@ -1100,10 +1100,9 @@
 	slot = nautilus_window_info_get_active_slot (window);
 
 	title = nautilus_window_slot_info_get_title (slot);
-        /* FIXME: we got a segfault here when switching from zeitgeist search */
-	/*nautilus_information_panel_set_uri (panel,
+	nautilus_information_panel_set_uri (panel,
 					    uri,
-					    title);*/
+					    title);
 	g_free (title);
 }
 
diff -Naur nautilus-elementary-build.orig/src/nautilus-navigation-window.c nautilus-elementary-build/src/nautilus-navigation-window.c
--- nautilus-elementary-build.orig/src/nautilus-navigation-window.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-navigation-window.c	2010-10-18 17:13:47.956669713 +0200
@@ -38,7 +38,6 @@
 #include "nautilus-location-bar.h"
 #include "nautilus-query-editor.h"
 #include "nautilus-search-bar.h"
-#include "nautilus-filter-bar.h"
 #include "nautilus-navigation-window-slot.h"
 #include "nautilus-notebook.h"
 #include "nautilus-window-manage-views.h"
@@ -395,29 +394,9 @@
 }
 
 static void
-time_period_changed_callback (NautilusFilterBar *bar, gint period, NautilusWindow *window)
-{
-        NautilusDirectory       *directory;
-        //NautilusSearchEngine    *e;
-        NautilusQuery           *q;
-
-        directory = nautilus_directory_get (window->details->active_pane->active_slot->location);
-       	if (NAUTILUS_IS_SEARCH_DIRECTORY (directory))
-        {
-                //e = nautilus_search_directory_get_engine (NAUTILUS_SEARCH_DIRECTORY (directory));
-                q = nautilus_search_directory_get_query (NAUTILUS_SEARCH_DIRECTORY (directory));
-                nautilus_query_set_period (q, period);
-                //nautilus_search_engine_start (e);
-                nautilus_window_slot_reload (window->details->active_pane->active_slot);
-        }
-        nautilus_directory_unref (directory);
-}
-
-static void
 nautilus_navigation_window_init (NautilusNavigationWindow *window)
 {
 	GtkWidget *toolbar;
-        GtkWidget *filterbar;
 	NautilusWindow *win;
 	NautilusNavigationWindowPane *pane;
 	GtkWidget *hpaned;
@@ -535,18 +514,6 @@
 	eel_preferences_add_callback_while_alive (NAUTILUS_PREFERENCES_ALWAYS_USE_BROWSER,
 						  always_use_browser_changed,
 						  window, G_OBJECT (window));
-
-        filterbar = nautilus_filter_bar_new ();
-        window->details->filterbar = filterbar;
-	gtk_table_attach (GTK_TABLE (NAUTILUS_WINDOW (window)->details->table),
-	        	  filterbar,
-		          /* X direction */                   /* Y direction */
-        		  0, 1,                               2, 3,
-		          GTK_EXPAND | GTK_FILL | GTK_SHRINK, 0,
-        		  0,                                  0);
-	//gtk_widget_show (filterbar);
-        g_signal_connect (filterbar, "time_period_changed", G_CALLBACK (time_period_changed_callback), 
-                          NAUTILUS_WINDOW (window));
 }
 
 static void
@@ -1154,7 +1121,6 @@
 {
 	NautilusNavigationWindowPane *pane;
 
-        printf("$$$%s\n", G_STRFUNC);
 	pane = NAUTILUS_NAVIGATION_WINDOW_PANE (NAUTILUS_WINDOW (window)->details->active_pane);
 	if (!nautilus_navigation_window_pane_search_bar_showing (pane)) {
 		remember_focus_widget (window);
@@ -1166,10 +1132,6 @@
 	}
 
 	nautilus_search_bar_grab_focus (NAUTILUS_SEARCH_BAR (pane->search_bar));
-	gtk_widget_show (window->details->filterbar);
-	/*NautilusWindowSlot *slot = nautilus_window_get_active_slot (NAUTILUS_WINDOW(window));    
-        nautilus_window_slot_update_query_editor (slot);*/
-        nautilus_navigation_window_pane_search_bar_go_default(pane);
 }
 
 void
@@ -1181,7 +1143,6 @@
 			nautilus_navigation_window_restore_focus_widget (window);
 		}
 	}
-	gtk_widget_hide (window->details->filterbar);
 }
 
 /* This updates the UI state of the search button, but does not
@@ -1768,27 +1729,3 @@
 	return g_list_length (NAUTILUS_WINDOW (window)->details->panes) > 1;
 }
 
-gint
-nautilus_navigation_window_get_filter_bar_period (NautilusNavigationWindow *window)
-{
-        return (nautilus_filter_bar_get_period (NAUTILUS_FILTER_BAR (window->details->filterbar)));
-}
-
-void
-nautilus_navigation_window_sync_filter_bar (NautilusNavigationWindow *window, NautilusWindowSlot *slot)
-{
-        NautilusDirectory       *directory;
-        NautilusQuery           *q;
-        gint                    period;
-
-        directory = nautilus_directory_get (slot->location);
-       	if (NAUTILUS_IS_SEARCH_DIRECTORY (directory))
-        {
-                q = nautilus_search_directory_get_query (NAUTILUS_SEARCH_DIRECTORY (directory));
-                period = nautilus_query_get_period (q);
-                //printf("SYNC SYNC %d\n", period);
-                nautilus_filter_bar_set_period (NAUTILUS_FILTER_BAR (window->details->filterbar), period);
-        }
-        nautilus_directory_unref (directory);
-}
-
diff -Naur nautilus-elementary-build.orig/src/nautilus-navigation-window.h nautilus-elementary-build/src/nautilus-navigation-window.h
--- nautilus-elementary-build.orig/src/nautilus-navigation-window.h	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-navigation-window.h	2010-10-18 17:14:44.160003048 +0200
@@ -117,7 +117,5 @@
 				NautilusNavigationWindow *window);
 gboolean nautilus_navigation_window_is_in_temporary_search_bar (GtkWidget *widget,
 			    NautilusNavigationWindow *window);
-gint     nautilus_navigation_window_get_filter_bar_period (NautilusNavigationWindow *window);
-void     nautilus_navigation_window_sync_filter_bar (NautilusNavigationWindow *window, NautilusWindowSlot *slot);
 
 #endif
diff -Naur nautilus-elementary-build.orig/src/nautilus-navigation-window-pane.c nautilus-elementary-build/src/nautilus-navigation-window-pane.c
--- nautilus-elementary-build.orig/src/nautilus-navigation-window-pane.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-navigation-window-pane.c	2010-10-18 17:17:50.300003045 +0200
@@ -114,10 +114,8 @@
 	NautilusSearchDirectory *search_directory;
 	NautilusQuery *query;
 	GFile *location;
-        NautilusNavigationWindow *navwin;
 
 	uri = nautilus_search_directory_generate_new_uri ();
-        printf("!!!!!!!!!!!!!!%s %s\n", G_STRFUNC, uri);
 	location = g_file_new_for_uri (uri);
 	g_free (uri);
 
@@ -128,10 +126,6 @@
 	search_directory = NAUTILUS_SEARCH_DIRECTORY (directory);
 
 	query = nautilus_search_bar_get_query (NAUTILUS_SEARCH_BAR (pane->search_bar));
-        navwin = NAUTILUS_NAVIGATION_WINDOW (NAUTILUS_WINDOW_PANE (pane)->window);
-        gint p = nautilus_navigation_window_get_filter_bar_period (navwin);
-        nautilus_query_set_period (query, p);
-        nautilus_query_set_filterbar (query, navwin->details->filterbar);
 
 	if (query != NULL) {
                 //printf("toto\n");
@@ -152,13 +146,6 @@
 	g_object_unref (location);
 }
 
-/* default search action when opening search bar */
-void
-nautilus_navigation_window_pane_search_bar_go_default(NautilusNavigationWindowPane *pane)
-{
-        search_bar_activate_callback (NULL, pane);
-}
-
 static void
 search_bar_cancel_callback (GtkWidget *widget,
 			    NautilusNavigationWindowPane *pane)
@@ -1360,7 +1347,6 @@
 	NautilusDirectory *directory;
 	NautilusSearchDirectory *search_directory;
 	NautilusNavigationWindowPane *pane;
-        GtkWidget *filterbar;
 
 	pane = NAUTILUS_NAVIGATION_WINDOW_PANE (window_pane);
 	slot = window_pane->active_slot;
@@ -1379,9 +1365,6 @@
 	} else {
 		pane->temporary_search_bar = TRUE;
 		nautilus_navigation_window_pane_hide_temporary_bars (pane);
-                filterbar = NAUTILUS_NAVIGATION_WINDOW (window_pane->window)->details->filterbar;
-                if (gtk_widget_get_visible (filterbar))
-                        gtk_widget_hide (filterbar);
 	}
 	nautilus_directory_unref (directory);
 }
diff -Naur nautilus-elementary-build.orig/src/nautilus-navigation-window-pane.h nautilus-elementary-build/src/nautilus-navigation-window-pane.h
--- nautilus-elementary-build.orig/src/nautilus-navigation-window-pane.h	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-navigation-window-pane.h	2010-10-18 17:18:12.673336377 +0200
@@ -100,6 +100,5 @@
 void     nautilus_navigation_window_pane_remove_page (NautilusNavigationWindowPane *pane, int page_num);
 
 void     nautilus_navigation_window_resize_toolbar_items (NautilusWindow *window);
-void     nautilus_navigation_window_pane_search_bar_go_default(NautilusNavigationWindowPane *pane);
 
 #endif /* NAUTILUS_NAVIGATION_WINDOW_PANE_H */
diff -Naur nautilus-elementary-build.orig/src/nautilus-navigation-window-slot.c nautilus-elementary-build/src/nautilus-navigation-window-slot.c
--- nautilus-elementary-build.orig/src/nautilus-navigation-window-slot.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-navigation-window-slot.c	2010-10-18 17:20:06.503336376 +0200
@@ -104,7 +104,6 @@
 			       gboolean reload,
 			       NautilusWindowSlot *slot)
 {
-        printf("----------%s\n", G_STRFUNC);
 	NautilusDirectory *directory;
 
 	g_assert (NAUTILUS_IS_FILE (slot->viewed_file));
@@ -154,27 +153,22 @@
 
 	slot->query_editor = NAUTILUS_QUERY_EDITOR (query_editor);
 
-        //printf("!!!%s\n", G_STRFUNC);
 	if (query_editor != NULL) {
 		g_signal_connect_object (query_editor, "changed",
 					 G_CALLBACK (query_editor_changed_callback), slot, 0);
 		
 		query = nautilus_search_directory_get_query (search_directory);
-		/*if (query != NULL) {
-                        printf("ed 2\n");*/
+		if (query != NULL) {
 			nautilus_query_editor_set_query (NAUTILUS_QUERY_EDITOR (query_editor),
 							 query);
-		if (query != NULL) 
 			g_object_unref (query);
-		/*} else {
-                        printf("ed 3\n");
+		} else {
 			nautilus_query_editor_set_default_query (NAUTILUS_QUERY_EDITOR (query_editor));
-		}*/
+		}
 
-                //amtest: remove extra widget
-		/*nautilus_window_slot_add_extra_location_widget (slot, query_editor);
+		nautilus_window_slot_add_extra_location_widget (slot, query_editor);
 		gtk_widget_show (query_editor);
-		nautilus_query_editor_grab_focus (NAUTILUS_QUERY_EDITOR (query_editor));*/
+		nautilus_query_editor_grab_focus (NAUTILUS_QUERY_EDITOR (query_editor));
 	}
 
 	nautilus_directory_unref (directory);
diff -Naur nautilus-elementary-build.orig/src/nautilus-places-sidebar.c nautilus-elementary-build/src/nautilus-places-sidebar.c
--- nautilus-elementary-build.orig/src/nautilus-places-sidebar.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-places-sidebar.c	2010-10-18 17:21:38.416669708 +0200
@@ -3190,8 +3190,6 @@
 nautilus_shortcuts_model_filter_row_draggable (GtkTreeDragSource *drag_source,
 					       GtkTreePath       *path)
 {
-        //amtest
-        printf("USELESS ??\n");
 	NautilusShortcutsModelFilter *model;
 	int pos;
 	int bookmarks_pos;
diff -Naur nautilus-elementary-build.orig/src/nautilus-query-editor.c nautilus-elementary-build/src/nautilus-query-editor.c
--- nautilus-elementary-build.orig/src/nautilus-query-editor.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-query-editor.c	2010-10-18 17:25:26.836669710 +0200
@@ -24,7 +24,6 @@
 #include <config.h>
 #include "nautilus-query-editor.h"
 #include "nautilus-window-slot.h"
-#include "nautilus-window-private.h"
 
 #include <string.h>
 #include <libnautilus-private/nautilus-marshal.h>
@@ -72,7 +71,6 @@
 	gboolean is_visible;
 	GtkWidget *invisible_vbox;
 	GtkWidget *visible_vbox;
-        GtkWidget *filterbar;
 
 	GList *rows;
 	char *last_set_query_text;
@@ -208,7 +206,6 @@
 static void
 entry_activate_cb (GtkWidget *entry, NautilusQueryEditor *editor)
 {
-        printf("the good callback finally: %s\n", G_STRFUNC);
 	if (editor->details->typing_timeout_id) {
 		g_source_remove (editor->details->typing_timeout_id);
 		editor->details->typing_timeout_id = 0;
@@ -1078,15 +1075,14 @@
 {
 	GtkWidget *hbox, *label;
 
-        //amtest: remove the extra searchbar
 	/* Create visible part: */
-	/*hbox = gtk_hbox_new (FALSE, 6);
+	hbox = gtk_hbox_new (FALSE, 6);
 	gtk_widget_show (hbox);
 	gtk_box_pack_start (GTK_BOX (editor->details->visible_vbox), hbox, FALSE, FALSE, 0);
 
 	label = gtk_label_new (_("Search results"));
 	gtk_widget_show (label);
-	gtk_box_pack_start (GTK_BOX (hbox), label, FALSE, FALSE, 0);*/
+	gtk_box_pack_start (GTK_BOX (hbox), label, FALSE, FALSE, 0);
 	
 	editor->details->entry = entry;
 	g_signal_connect (editor->details->entry, "activate",
@@ -1094,7 +1090,7 @@
 	g_signal_connect (editor->details->entry, "changed",
 			  G_CALLBACK (entry_changed_cb), editor);
 
-	//finish_first_line (editor, hbox, FALSE);
+	finish_first_line (editor, hbox, FALSE);
 
 }
 
@@ -1127,27 +1123,17 @@
 {
 	NautilusQuery *query;
 
-        printf("%s\n", G_STRFUNC);
 	if (editor->details->change_frozen) {
 		return;
 	}
 
-        /* yeah let's control the query twice
-        ** once in query_is_validator and another in
-        ** nautilus_query_editor_get_query
-        ** never be careful enought ;) */
-	//if (query_is_valid (editor)) {
-                printf("valid\n");
+	if (query_is_valid (editor)) {
 		query = nautilus_query_editor_get_query (editor);
-	
-                gint p = nautilus_window_slot_get_filter_bar_period (editor->details->slot);
-                nautilus_query_set_period (query, p);
-                nautilus_query_set_filterbar (query, editor->details->filterbar);
 
 		g_signal_emit (editor, signals[CHANGED], 0,
 			       query, editor->details->is_indexed || force_reload);
 		g_object_unref (query);
-	//}
+	}
 }
 
 static void
@@ -1178,14 +1164,12 @@
 
 	query_text = gtk_entry_get_text (GTK_ENTRY (editor->details->entry));
 
-        /* maybe i want an empty string request to view all my files */
 	/* Empty string is a NULL query */
-	/*if (query_text && query_text[0] == '\0') {
+	if (query_text && query_text[0] == '\0') {
 		return NULL;
-	}*/
+	}
 	
 	query = nautilus_query_new ();
-        printf ("NEW query\n");
 	nautilus_query_set_text (query, query_text);
 
 	for (l = editor->details->rows; l != NULL; l = l->next) {
@@ -1253,10 +1237,10 @@
 						   entry_changed_cb,
 						   editor);
 
-		/*editor->details->change_frozen = TRUE;
+		editor->details->change_frozen = TRUE;
 		gtk_entry_set_text (GTK_ENTRY (editor->details->entry),
 				    editor->details->last_set_query_text);
-		editor->details->change_frozen = FALSE;*/
+		editor->details->change_frozen = FALSE;
 	}
 }
 
@@ -1270,7 +1254,6 @@
 	GtkWidget *entry;
 	NautilusQueryEditor *editor;
 
-        printf("%s\n", G_STRFUNC);
 	editor = NAUTILUS_QUERY_EDITOR (g_object_new (NAUTILUS_TYPE_QUERY_EDITOR, NULL));
 	editor->details->is_indexed = is_indexed;
 
@@ -1280,7 +1263,6 @@
 	eel_add_weak_pointer (&editor->details->bar);
 
 	editor->details->slot = slot;
-        editor->details->filterbar = NAUTILUS_NAVIGATION_WINDOW (slot->pane->window)->details->filterbar;
 
 	entry = nautilus_search_bar_borrow_entry (bar);
 	setup_external_entry (editor, entry);
diff -Naur nautilus-elementary-build.orig/src/nautilus-search-bar.c nautilus-elementary-build/src/nautilus-search-bar.c
--- nautilus-elementary-build.orig/src/nautilus-search-bar.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-search-bar.c	2010-10-18 17:26:38.490003046 +0200
@@ -125,11 +125,9 @@
 static void
 entry_activate_cb (GtkWidget *entry, NautilusSearchBar *bar)
 {
-        printf("!!%s\n", G_STRFUNC);
-       //amtest: accept empty search
-       //if (entry_has_text (bar) && !bar->details->entry_borrowed) {
+       if (entry_has_text (bar) && !bar->details->entry_borrowed) {
                g_signal_emit (bar, signals[ACTIVATE], 0);
-       //}
+       }
 }
 
 static gboolean
@@ -181,8 +179,6 @@
 
 	g_signal_connect (bar->details->entry, "activate",
 			  G_CALLBACK (entry_activate_cb), bar);
-	/*g_signal_connect (bar->details->entry, "changed",
-			  G_CALLBACK (entry_activate_cb), bar);*/
 	g_signal_connect (bar->details->entry, "icon-release",
 			  G_CALLBACK (entry_icon_release_cb), bar);
 	g_signal_connect (bar->details->entry, "focus-in-event",
@@ -233,9 +229,9 @@
 	query_text = gtk_entry_get_text (GTK_ENTRY (bar->details->entry));
 
 	/* Empty string is a NULL query */
-	/*if (query_text && query_text[0] == '\0') {
+	if (query_text && query_text[0] == '\0') {
 		return NULL;
-	}*/
+	}
 	query = nautilus_query_new ();
 	nautilus_query_set_text (query, query_text);
 
diff -Naur nautilus-elementary-build.orig/src/nautilus-window-manage-views.c nautilus-elementary-build/src/nautilus-window-manage-views.c
--- nautilus-elementary-build.orig/src/nautilus-window-manage-views.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-window-manage-views.c	2010-10-18 17:27:54.536669710 +0200
@@ -624,14 +624,6 @@
         }
 	
 	if (old_location) {
-                NautilusDirectory *directory = nautilus_directory_get (old_location);
-                /* FIXME: don't have time to play to find the lost g_unref somewhere 
-                ** so we handle saved search and normal search this way
-                ** althought they should have a common unref method */
-                if (NAUTILUS_IS_SEARCH_DIRECTORY (directory))
-                    if (!nautilus_search_directory_is_saved_search (NAUTILUS_SEARCH_DIRECTORY (directory)))
-                        g_object_unref (directory);
-                g_object_unref (directory);
 		g_object_unref (old_location);
 	}
 
diff -Naur nautilus-elementary-build.orig/src/nautilus-window-private.h nautilus-elementary-build/src/nautilus-window-private.h
--- nautilus-elementary-build.orig/src/nautilus-window-private.h	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-window-private.h	2010-10-18 17:35:03.813336380 +0200
@@ -128,9 +128,6 @@
         	
         /* split view */
         GtkWidget *split_view_hpane;
-
-        /* filter bar*/
-        GtkWidget *filterbar;
 };
 
 #define NAUTILUS_MENU_PATH_BACK_ITEM			"/menu/Go/Back"
diff -Naur nautilus-elementary-build.orig/src/nautilus-window-slot.c nautilus-elementary-build/src/nautilus-window-slot.c
--- nautilus-elementary-build.orig/src/nautilus-window-slot.c	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-window-slot.c	2010-10-18 17:39:16.336669708 +0200
@@ -57,8 +57,6 @@
 			       gboolean reload,
 			       NautilusWindowSlot *slot)
 {
-        /* amtest: USELESS? */
-        printf("---------- USELESS ? %s\n", G_STRFUNC);
 	NautilusDirectory *directory;
 
 	directory = nautilus_directory_get_for_file (slot->viewed_file);
@@ -124,12 +122,10 @@
 	nautilus_window_sync_zoom_widgets (window);
 	nautilus_window_pane_sync_location_widgets (slot->pane);
 	nautilus_window_pane_sync_search_widgets (slot->pane);
-        if (NAUTILUS_IS_NAVIGATION_WINDOW (window))
-        {
-                if (eel_preferences_get_boolean (NAUTILUS_PREFERENCES_SHOW_ZOOM_SLIDER))
-                        zoom_slider_update_value (window);
-                nautilus_navigation_window_sync_filter_bar (NAUTILUS_NAVIGATION_WINDOW (window), slot);
-        }
+
+	if (eel_preferences_get_boolean (NAUTILUS_PREFERENCES_SHOW_ZOOM_SLIDER)) {
+		zoom_slider_update_value (window);
+	}
 
 	if (slot->viewed_file != NULL) {
 		nautilus_window_load_view_as_menus (window);
@@ -836,12 +832,6 @@
 	eel_add_weak_pointer (&slot->query_editor);
 }
 
-gint
-nautilus_window_slot_get_filter_bar_period (NautilusWindowSlot *slot)
-{
-        return (nautilus_navigation_window_get_filter_bar_period (NAUTILUS_NAVIGATION_WINDOW (slot->pane->window)));
-}
-
 static void
 remove_all (GtkWidget *widget,
 	    gpointer data)
diff -Naur nautilus-elementary-build.orig/src/nautilus-window-slot.h nautilus-elementary-build/src/nautilus-window-slot.h
--- nautilus-elementary-build.orig/src/nautilus-window-slot.h	2010-10-18 16:11:57.000000000 +0200
+++ nautilus-elementary-build/src/nautilus-window-slot.h	2010-10-18 17:40:24.550003043 +0200
@@ -190,8 +190,6 @@
 
 void    nautilus_window_slot_is_in_active_pane (NautilusWindowSlot *slot, gboolean is_active);
 
-gint    nautilus_window_slot_get_filter_bar_period (NautilusWindowSlot *slot);
-
 void    nautilus_window_slot_update_eterm_path(NautilusWindowSlot *slot);
 
 #endif /* NAUTILUS_WINDOW_SLOT_H */
