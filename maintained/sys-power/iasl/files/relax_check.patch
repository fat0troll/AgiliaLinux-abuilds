From 8cc0a33fe7317cfbb936cf807914ab9ee3e81d80 Mon Sep 17 00:00:00 2001
From: Robert Moore <Robert.Moore@intel.com>
Date: Wed, 03 Nov 2010 17:31:30 +0000
Subject: iASL: Relax alphanumeric restriction on _CID strings.

These strings are "bus-specific" per the ACPI specification, therefore
any characters are acceptable. The only checks that can be performed
are for a null string and perhaps for a leading asterisk.
---
diff --git a/source/compiler/aslanalyze.c b/source/compiler/aslanalyze.c
index 1087bca..396c126 100644
--- a/source/compiler/aslanalyze.c
+++ b/source/compiler/aslanalyze.c
@@ -684,19 +684,45 @@ AnCheckId (
     UINT32                  AlphaPrefixLength;
 
 
+    /* Only care about string versions of _HID/_CID (integers are legal) */
+
     if (Op->Asl.ParseOpcode != PARSEOP_STRING_LITERAL)
     {
         return;
     }
 
+    /* For both _HID and _CID, the string must be non-null */
+
     Length = strlen (Op->Asl.Value.String);
+    if (!Length)
+    {
+        AslError (ASL_ERROR, ASL_MSG_NULL_STRING,
+            Op, NULL);
+        return;
+    }
 
     /*
-     * If _HID/_CID is a string, all characters must be alphanumeric.
-     * One of the things we want to catch here is the use of
-     * a leading asterisk in the string -- an odd construct
-     * that certain platform manufacturers are fond of.
+     * One of the things we want to catch here is the use of a leading
+     * asterisk in the string -- an odd construct that certain platform
+     * manufacturers are fond of. Technically, a leading asterisk is OK
+     * for _CID, but a valid use of this has not been seen.
      */
+    if (*Op->Asl.Value.String == '*')
+    {
+        AslError (ASL_ERROR, ASL_MSG_LEADING_ASTERISK,
+            Op, Op->Asl.Value.String);
+        return;
+    }
+
+    /* _CID strings are bus-specific, no more checks can be performed */
+
+    if (Type == ASL_TYPE_CID)
+    {
+        return;
+    }
+
+    /* For _HID, all characters must be alphanumeric */
+
     for (i = 0; Op->Asl.Value.String[i]; i++)
     {
         if (!isalnum ((int) Op->Asl.Value.String[i]))
@@ -707,13 +733,6 @@ AnCheckId (
         }
     }
 
-    if (Type == ASL_TYPE_CID)
-    {
-        /* _CID strings are bus-specific, no more checks can be performed */
-
-        return;
-    }
-
     /* _HID String must be of the form "XXX####" or "ACPI####" */
 
     if ((Length < 7) || (Length > 8))
diff --git a/source/compiler/aslmessages.h b/source/compiler/aslmessages.h
index 0457800..7e1e4d9 100644
--- a/source/compiler/aslmessages.h
+++ b/source/compiler/aslmessages.h
@@ -258,6 +258,9 @@ typedef enum
     ASL_MSG_NULL_DESCRIPTOR,
     ASL_MSG_UPPER_CASE,
     ASL_MSG_HID_LENGTH,
+    ASL_MSG_NULL_STRING,
+    ASL_MSG_LEADING_ASTERISK,
+
     ASL_MSG_INVALID_FIELD_NAME,
     ASL_MSG_INTEGER_SIZE,
     ASL_MSG_INVALID_HEX_INTEGER,
@@ -403,6 +406,8 @@ char                        *AslMessages [] = {
 /*    ASL_MSG_NULL_DESCRIPTOR */            "Min/Max/Length/Gran are all zero, but no resource tag",
 /*    ASL_MSG_UPPER_CASE */                 "Non-hex letters must be upper case",
 /*    ASL_MSG_HID_LENGTH */                 "_HID string must be exactly 7 or 8 characters",
+/*    ASL_MSG_NULL_STRING */                "Invalid zero-length (null) string",
+/*    ASL_MSG_LEADING_ASTERISK */           "Invalid leading asterisk",
 
 /* These messages are used by the data table compiler only */
 
--
cgit v0.8.3-13-ge633

