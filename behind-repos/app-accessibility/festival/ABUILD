#ABUILD created by/создан: fat0troll, fat0troll at riseup.net 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=festival
pkgver=2.0.95
pkgbuild=1
arch=('auto')

shortdesc="A general multi-lingual speech synthesis system developed at CSTR (Centre for Speech Technology Research)"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("Festival offers a general framework for building speech synthesis systems as well as including examples of various modules. As a whole it offers full text to speech through a number APIs: from shell level, though a Scheme command interpreter, as a C++ library, from Java, and an Emacs interface. Festival is multi-lingual (currently English (British and American), and Spanish) though English is the most advanced. Other groups release new languages for the system. And full tools and documentation for build new voices are available through Carnegie Mellon's FestVox project (http://festvox.org)"
)

source=("http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/${pkgname}-${pkgver}-beta.tar.gz"
"http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/speech_tools-${pkgver}-beta.tar.gz"
"http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/festlex_CMU.tar.gz"
"http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/festlex_OALD.tar.gz"
"http://www.cstr.ed.ac.uk/downloads/${pkgname}/${pkgver}/festlex_POSLEX.tar.gz")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="accessibility app-accessibility"

#dependencies only needed to build package
build_deps=""

provides=""
conflicts=""

adddep=""
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into /usr/docs/${pkgname} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip
custom_opts=""

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

build()
{
# Build Speech Tools first
cd $srcdir/speech_tools
patch -Np1 -i $filedir/config.diff

./configure --prefix=/usr --libdir=/usr/lib${LIBDIRSUFFIX} --sysconfdir=/etc
make OPTIMISE_CXXFLAGS="${CXXFLAGS}" OPTIMISE_CCFLAGS="${CFLAGS}" || exit 1

# Build Festival itself
cd $srcdir/festival
patch -Np1 -i $filedir/festconfig.diff

# Aviod make failure on making scripts and docs
sed -i "s#examples bin doc#examples#" Makefile
./configure --prefix=/usr --libdir=/usr/lib${LIBDIRSUFFIX} --sysconfdir=/etc
make OPTIMISE_CXXFLAGS="${CXXFLAGS}" OPTIMISE_CCFLAGS="${CFLAGS}"
}


#ran after function build() 
#после сборки
after_build()
{
# Install Speech Tools first
cd $srcdir/speech_tools
install -dm755 $pkgdir/usr/{bin,lib${LIBDIRSUFFIX},include/speech_tools/{,instantiate,ling_class,rxp,sigpr,unix}}
#binaries
#move binaries over wrappers (FS#7864) 
for i in `grep -l 'EST shared script' bin/*`; do 
	cp -f main/$(basename $i) bin; 
done
install -m755 -t $pkgdir/usr/bin bin/[a-z]*
rm -f $pkgdir/usr/bin/{est_gdb,est_examples,est_program}

#libraries
install -m755 -t $pkgdir/usr/lib${LIBDIRSUFFIX} lib/lib*.so.*
        ln -sf libestbase.so.${pkgver}.1 $pkgdir/usr/lib${LIBDIRSUFFIX}/libestbase.so
        ln -sf libeststring.so.1.2 $pkgdir/usr/lib${LIBDIRSUFFIX}/libeststring.so
        install -m644 -t $pkgdir/usr/lib${LIBDIRSUFFIX} lib/lib*.a

#headers
for dir in {.,instantiate,ling_class,rxp,sigpr,unix}; do
	install -m644 -t ${pkgdir}/usr/include/speech_tools/$dir include/$dir/*.h
done

# Install Festival itself
cd $srcdir/festival

#binaries
install -m755 src/main/festival $pkgdir/usr/bin/
install -m755 src/main/festival_client $pkgdir/usr/bin/
install -m755 examples/text2wave $pkgdir/usr/bin
install -m755 examples/saytime $pkgdir/usr/bin/

#libraries
install -m644 src/lib/libFestival.a $pkgdir/usr/lib${LIBDIRSUFFIX}/

#headers
install -dm755 $pkgdir/usr/include/festival
install -m644 -t $pkgdir/usr/include/festival src/include/*.h

mkdir -p $pkgdir/usr/share/festival
#install -m644 -t $pkgdir/usr/share/festival lib/*.scm
#need to clean up but requires knowing which files are actually needed...
cp -aR lib/* $pkgdir/usr/share/festival
rm -f $(find $pkgdir/usr/share/festival -name Makefile)

#create voices directory
install -dm755 $pkgdir/usr/share/festival/voices

#################################################################
# Ok now some general cleanups
for i in `find $pkgdir/usr/include/ -type f`; do
	sed -i -e 's,"EST.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/\",speech_tools/,g' \
		-e 's,"siod.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/\",speech_tools/,g' \
		-e 's,"instantiate/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/instantiate/\",speech_tools/instantiate/,g' -e 's,"instantiate,instantiate,g' \
		-e 's,"ling_class/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/ling_class/\",speech_tools/ling_class/,g' -e 's,"ling_class,ling_class,g'\
		-e 's,"rxp/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/rxp/\",speech_tools/rxp/,g' -e 's,"rxp,rxp,g' \
		-e 's,"sigpr/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/sigpr/\",speech_tools/sigpr/,g' -e 's,"sigpr,sigpr,g' \
		-e 's,"unix/.*\.h",\<speech_tools/&\>,g' -e 's,speech_tools/unix/\",speech_tools/unix/,g' -e 's,\.h\">,.h\>,g' -e 's,"unix,unix,g' \
		-e 's,"festival\.h",\<festival/festival.h\>,g' \
		-e 's,"ModuleDescription\.h",\<festival/ModuleDescription.h\>,g' \
		-e 's,"Phone\.h",\<festival/Phone.h\>,g' $i
done
}
